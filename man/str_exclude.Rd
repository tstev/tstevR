% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/str_exclude.R
\name{str_exclude}
\alias{str_exclude}
\alias{str_which_not}
\title{Exclude strings matching a pattern, or find positions.}
\usage{
str_exclude(string, pattern)

str_which_not(string, pattern)
}
\arguments{
\item{string}{a input vector that is coercible to a character vector.}

\item{pattern}{pattern to look for and exclude.}
}
\value{
a character or integer vector for \code{str_exclude} and \code{str_which_not},
respectively.
}
\description{
\code{str_exclude()} is a wrapper function (much like \link[stringr:str_subset]{stringr::str_subset})
around \code{x[!str_detect(x, pattern)]}, and is equivalent to
\code{grep(pattern, x, value = TRUE, invert = TRUE)}. \code{str_which_not()} is a
wrapper around \code{which(str_detect(x, pattern))}, and is equivalent to
\code{grep(pattern, x, invert = TRUE)}.
}
\examples{
fruits <- c("apple", "avocado", "banana")
str_exclude(fruits, "ap")
str_which_not(fruits, "^a")
}
\seealso{
\code{\link[=grep]{grep()}} with argument \code{invert = TRUE} and \code{value = TRUE} and
\link[stringr:str_detect]{stringr::str_detect} for the function it wraps and for the underlying
implementation.
}
